@model ECommerceProject.Models.Company

@{
    ViewBag.Title = "Create";
}

<h2>Criar Companhia</h2>


@using (Html.BeginForm("Create", "Companies", FormMethod.Post, new { enctype = "multipart/form-data" })) //Campo obrigatório quando se tem adição de imagens
{
    @Html.AntiForgeryToken()



<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LogoFile, "Logo da Empresa", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <span class="btn btn-default btn-file">
                @Html.TextBoxFor(model => model.LogoFile, new { type = "file" })
            </span>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DepartamentsId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("DepartamentsId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DepartamentsId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CityId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("CityId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Criar" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("◀ Voltar", "Index", new { }, new { @class="btn btn-default"})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
    jQuery(document).ready(function () {
        jQuery("#DepartamentsId").change(function () {
            jQuery("#CityId").empty();
            jQuery("#CityId").append('<option value="0">[Selecione uma cidade..]</option>');

            jQuery.ajax({
                type: 'POST',
                url: '@Url.Action("GetCities")',
                dataType: 'json',
                data: { departamentId: jQuery("#DepartamentsId").val() },
                success: function (data) {
                    jQuery.each(data, function (i, data) {
                        jQuery("#CityId").append('<option value="'
                            + data.CityId + '">'
                            + data.Name + '</option>');

                    });
                },
                 error: function (ex) {
                     alert('Falha ao buscar cidades' + ex);
                 }
            });
            return false;
        })

    });
    </script>
}


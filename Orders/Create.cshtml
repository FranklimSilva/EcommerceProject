@model ECommerceProject.Models.Order

@{
    ViewBag.Title = "Create";
}

<h2>Nova Order</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Ordens e Pedidos</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Cirar Ordem" class="btn btn-success" />
                    @Html.ActionLink("Adicionar Produto", "AddProduct", new { }, new { @class = "dialog-window btn btn-primary" })
                    @Html.ActionLink("◀ Voltar", "Index", new { }, new { @class = "btn btn-danger" })
                </div>
            </div>
        </div>
    </div>
}

<div class="modal fade" id="AddProduct" tabindex="-1" role="dialog" aria-l  hidden="true" data-backdrop="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"></button>
                        <h2 class="modal-title"></h2>
            </div>
            <div class="modal-body"><div class="te">Espere por favor...</div></div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    jQuery(function () {
        jQuery("#datapicker").datatimepicker({ format: 'DD/MM/YYYY' });
    });

    jQuery(document).ready(function () {
        jQuery("body").on("click", "a.dialog-window", null, function (e)
            e.preventDefault();
        var $link = jQuery(this);
        var title = $link.text();
        jQuery('#AddProduct .modal-title').html(title);
        var url = jQuery(this).attr('href');
        if (url.indexOf('#') == 0) {
            jQuery('#AddProduct').modal('show');
        }
        else {
            jQuery.get(url, function (data) {
                jQuery('#AddProduct .te').html(data);
                jQuery('#AddProduct').modal();
            }).sucess(function () { jQuery('input:text:visible:first') })

        }
    });

    </script>
}
<h4>Produtos adicionados</h4>

@if (Model.Details.Count == 0)
{
    <h5>Não existe nenhum detalhe</h5>
}
else
{
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Details[0].Photo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Details[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Details[0].TaxRate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Details[0].Price)
            </th>
            <th>
                Estoque
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Details[0].Quantity)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Details[0].Value)
            </th>

            <th></th>
        </tr>

        @foreach (var item in Model.Details)
        {
    <tr>
        <td>
            @if (!string.IsNullOrEmpty(item.Photo))
            {
                <img src="@Url.Content(item.Photo)" alt="ImageProduct" style="width:60px;height:60px;" />
            }
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TaxRate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Product.Stock)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Quantity)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Value)
        </td>
        <td>
            @Html.ActionLink("Excluir", "DeleteProduct", new { id = item.ProductId }, new { @class = "btn btn-danger", onclick = "return confirm('Deseja excluir o Produto?')" })
        </td>
    </tr>
        }
        <tr>
            <td colspan="5" align="right">
                <strong>Total</strong>
            </td>
            <td>
                @Html.DisplayFor(modelItem => Model.TotalQuantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => Model.TotalValue)
            </td>
        </tr>


    </table>
}